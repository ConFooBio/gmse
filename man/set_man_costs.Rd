% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gmse_apply_control.R
\name{set_man_costs}
\alias{set_man_costs}
\title{set_man_costs}
\usage{
set_man_costs(dat, newcost)
}
\arguments{
\item{dat}{gmse_apply(get_res="Full") style list.}

\item{newcost}{list of two elements, named culling and scaring respectively. Each element can either be a single value or a vector of length equal to the number of user/stakeholders. If the former, the given value is used as the new cost for that action, for all users. If the latter, user-specific costs are set (not yet tested).}
}
\value{
gmse_apply_ style list as input, but with the cost array overwritten with the new costs.
}
\description{
Function to manually override user action costs set in a given gmse_apply_ output list. Currently implemented only for culling and scaring actions. If given single values for either culling or scaring, this value is repeated for all users.
}
\details{
Function to manually override user action costs set in a given gmse_apply_ output list. Currently implemented only for culling and scaring actions. If given single values for either culling or scaring, this value is repeated for all users.
}
\examples{
\dontrun{
sim_old <- gmse_apply(get_res = "Full", scaring = TRUE);
sim_old$COST[1,8:12,2:5]
sim_old_updated <- set_man_costs(sim_old, newcost = list(culling = 999, scaring = 999))
sim_old_updated$COST[1,8:12,2:5]
sim_old_updated <- set_man_costs(sim_old, newcost = list(culling = c(10,20,30,40), scaring = 999))
sim_old_updated$COST[1,8:12,2:5]
}
}
